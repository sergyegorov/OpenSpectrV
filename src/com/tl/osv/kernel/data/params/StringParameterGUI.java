/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tl.osv.kernel.data.params;

import com.tl.osv.Log;
import com.tl.osv.Mls;
import java.awt.Color;
import java.awt.SystemColor;
import java.awt.Toolkit;
import javax.swing.event.DocumentEvent;

/**
 *
 * @author root
 */
public class StringParameterGUI extends javax.swing.JPanel {

    /**
     * Creates new form StringParameterGUI
     */
    public StringParameterGUI() {
        initComponents();
    }

    Color labelBackground;
    StringBaseParameter parameter;
    public void setMaster(StringBaseParameter parameter){
        if(this.parameter != null)
            throw new RuntimeException("Can't setup parameter twice...");
        this.parameter = parameter;
        labelName.setText(Mls.translate(parameter.getName()));
        textfieldValue.setToolTipText(Mls.translate(parameter.getDescription()));
        labelBackground = SystemColor.control;
        labelModefied.setForeground(labelBackground);
        labelError.setForeground(labelBackground);
        textfieldValue.setText(parameter.getAsString());
        
        textfieldValue.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            void modefied(){
                try{
                    labelModefied.setForeground(labelName.getForeground());
                    String error = parameter.validate(textfieldValue.getText());
                    labelError.setToolTipText(error);
                    if(error == null)
                        labelError.setForeground(labelBackground);
                    else
                        labelError.setForeground(Color.red);
                }catch(Exception ex){
                    Log.exception(ex);
                }
            }
            
            @Override
            public void insertUpdate(DocumentEvent e) {
                modefied();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                modefied();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                modefied();
            }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelName = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        labelModefied = new javax.swing.JLabel();
        labelError = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        textfieldValue = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(400, 30));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout(5, 3));

        labelName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelName.setText("jLabel1");
        jPanel1.add(labelName, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.LINE_START);

        jPanel2.setLayout(new java.awt.BorderLayout(5, 3));

        labelModefied.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelModefied.setText("*");
        jPanel2.add(labelModefied, java.awt.BorderLayout.WEST);

        labelError.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelError.setForeground(new java.awt.Color(255, 0, 0));
        labelError.setText("?");
        jPanel2.add(labelError, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.LINE_END);

        jPanel4.setLayout(new java.awt.BorderLayout(5, 3));

        textfieldValue.setText("jTextField1");
        textfieldValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldValueActionPerformed(evt);
            }
        });
        jPanel4.add(textfieldValue, java.awt.BorderLayout.NORTH);

        add(jPanel4, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void textfieldValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldValueActionPerformed
        try{
            if(parameter.validate(textfieldValue.getText()) != null){
                Toolkit.getDefaultToolkit().beep();
                return;
            }
            parameter.setAsString(textfieldValue.getText());
            parameter.getParent().commit();
            labelModefied.setForeground(labelBackground);
            labelError.setForeground(labelBackground);
        }catch(Exception ex){
            Log.exception(ex);
        }
    }//GEN-LAST:event_textfieldValueActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelError;
    private javax.swing.JLabel labelModefied;
    private javax.swing.JLabel labelName;
    private javax.swing.JTextField textfieldValue;
    // End of variables declaration//GEN-END:variables
}
